{
  "dts": [
    {
      "name": "com.jsoniter.TestObject.test_inheritance",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_native_field"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestDemo.test_empty_array_as_null",
          "com.jsoniter.TestDemo.test_utf8",
          "com.jsoniter.TestDemo.test_abc",
          "com.jsoniter.TestDemo.test_iterator",
          "com.jsoniter.TestDemo.test_generics",
          "com.jsoniter.TestDemo.test_any_is_fun",
          "com.jsoniter.TestDemo.test_iterator_api_and_bind",
          "com.jsoniter.TestDemo.test_iterator_api",
          "com.jsoniter.TestDemo.test_bind_api",
          "com.jsoniter.TestDemo.test_deserialize",
          "com.jsoniter.TestDemo.test_any_api",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_read_null"
        ],
        "result": "PASS",
        "testRunId": "1700529324766-8589d9ad-6d1b-43a3-ad8f-9fb460029c4d"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestIO.test_read_byte",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes"
        ],
        "result": "FAILURE",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestReadAny.test_read_any_in_streaming",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestFloat.test_combination_of_dot_and_exponent",
          "com.jsoniter.TestFloat.test_positive_negative",
          "com.jsoniter.TestFloat.test_long_double",
          "com.jsoniter.TestFloat.test_decimal_places",
          "com.jsoniter.TestFloat.test_ieee_754",
          "com.jsoniter.TestFloat.testChooseDouble",
          "com.jsoniter.TestFloat.testInfinity",
          "com.jsoniter.TestFloat.test_streaming",
          "com.jsoniter.TestFloat.testBigDecimal",
          "com.jsoniter.TestReadAny.test_read_any_from_string"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestNull.test_null_as_Double",
          "com.jsoniter.TestNull.test_null_as_Byte",
          "com.jsoniter.TestNull.test_null_as_Character",
          "com.jsoniter.TestNull.test_null_as_Any",
          "com.jsoniter.TestNull.test_null_as_BigDecimal",
          "com.jsoniter.TestNull.test_null_as_BigInteger",
          "com.jsoniter.TestNull.test_null_as_Long",
          "com.jsoniter.TestNull.test_null_as_Boolean",
          "com.jsoniter.TestNull.test_null_as_Short",
          "com.jsoniter.TestNull.test_null_as_Integer",
          "com.jsoniter.TestNull.test_null_as_Float",
          "com.jsoniter.TestDemo.test_abc",
          "com.jsoniter.TestDemo.test_iterator_api",
          "com.jsoniter.TestDemo.test_bind_api",
          "com.jsoniter.TestDemo.test_generics",
          "com.jsoniter.TestDemo.test_iterator",
          "com.jsoniter.TestDemo.test_deserialize",
          "com.jsoniter.TestDemo.test_utf8",
          "com.jsoniter.TestDemo.test_empty_array_as_null",
          "com.jsoniter.TestDemo.test_iterator_api_and_bind",
          "com.jsoniter.TestDemo.test_any_api",
          "com.jsoniter.TestDemo.test_any_is_fun",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.TestReadAny.test_read_int_as_string",
          "com.jsoniter.TestReadAny.test_size",
          "com.jsoniter.TestReadAny.test_read_double",
          "com.jsoniter.TestReadAny.test_read_int",
          "com.jsoniter.TestReadAny.test_read_any",
          "com.jsoniter.TestReadAny.test_read_string",
          "com.jsoniter.TestReadAny.test_read_int_object",
          "com.jsoniter.TestReadAny.test_get",
          "com.jsoniter.TestReadAny.test_read_float_as_int",
          "com.jsoniter.TestReadAny.test_bind_to_any",
          "com.jsoniter.TestReadAny.test_read_any_from_string",
          "com.jsoniter.TestReadAny.test_read_long",
          "com.jsoniter.TestReadAny.test_read_multiple_field",
          "com.jsoniter.TestReadAny.test_read_boolean",
          "com.jsoniter.TestReadAny.test_require_path",
          "com.jsoniter.TestReadAny.test_read_class",
          "com.jsoniter.TestReadAny.test_keys",
          "com.jsoniter.TestReadAny.test_read_int_array",
          "com.jsoniter.TestReadAny.test_read_float"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestString.test_normal_escape",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_long_string"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.output.TestObject.test_transient_field_getter",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable"
        ],
        "result": "PASS",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestNull.test_null_as_Double",
          "com.jsoniter.TestNull.test_null_as_Byte",
          "com.jsoniter.TestNull.test_null_as_Character",
          "com.jsoniter.TestNull.test_null_as_Any",
          "com.jsoniter.TestNull.test_null_as_BigDecimal",
          "com.jsoniter.TestNull.test_null_as_BigInteger",
          "com.jsoniter.TestNull.test_null_as_Long",
          "com.jsoniter.TestNull.test_null_as_Boolean",
          "com.jsoniter.TestNull.test_null_as_Short",
          "com.jsoniter.TestNull.test_null_as_Integer",
          "com.jsoniter.TestNull.test_null_as_Float",
          "com.jsoniter.TestDemo.test_abc",
          "com.jsoniter.TestDemo.test_iterator_api",
          "com.jsoniter.TestDemo.test_bind_api",
          "com.jsoniter.TestDemo.test_generics",
          "com.jsoniter.TestDemo.test_iterator",
          "com.jsoniter.TestDemo.test_deserialize",
          "com.jsoniter.TestDemo.test_utf8",
          "com.jsoniter.TestDemo.test_empty_array_as_null",
          "com.jsoniter.TestDemo.test_iterator_api_and_bind",
          "com.jsoniter.TestDemo.test_any_api",
          "com.jsoniter.TestDemo.test_any_is_fun",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_omit_default"
        ],
        "result": "ERROR",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestString.test_long_string_in_streaming",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_iterator"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestIO.test_unread_byte",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl"
        ],
        "result": "FAILURE",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestString.test_unicode_escape",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_null_string"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_long_string"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestIO.test_read_bytes",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte"
        ],
        "result": "FAILURE",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestString.test_string_across_buffer",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestString.test_long_string_in_streaming"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_normal_escape"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float"
        ],
        "result": "PASS",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing"
        ],
        "result": "ERROR",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "NOD"
    },
    {
      "name": "com.jsoniter.TestBoolean.test_streaming",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode"
        ],
        "result": "PASS",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode"
        ],
        "result": "ERROR",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "NOD"
    },
    {
      "name": "com.jsoniter.output.TestObject.test_omit_selft_defined",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default"
        ],
        "result": "PASS",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestNull.test_null_as_Double",
          "com.jsoniter.TestNull.test_null_as_Byte",
          "com.jsoniter.TestNull.test_null_as_Character",
          "com.jsoniter.TestNull.test_null_as_Any",
          "com.jsoniter.TestNull.test_null_as_BigDecimal",
          "com.jsoniter.TestNull.test_null_as_BigInteger",
          "com.jsoniter.TestNull.test_null_as_Long",
          "com.jsoniter.TestNull.test_null_as_Boolean",
          "com.jsoniter.TestNull.test_null_as_Short",
          "com.jsoniter.TestNull.test_null_as_Integer",
          "com.jsoniter.TestNull.test_null_as_Float",
          "com.jsoniter.TestDemo.test_abc",
          "com.jsoniter.TestDemo.test_iterator_api",
          "com.jsoniter.TestDemo.test_bind_api",
          "com.jsoniter.TestDemo.test_generics",
          "com.jsoniter.TestDemo.test_iterator",
          "com.jsoniter.TestDemo.test_deserialize",
          "com.jsoniter.TestDemo.test_utf8",
          "com.jsoniter.TestDemo.test_empty_array_as_null",
          "com.jsoniter.TestDemo.test_iterator_api_and_bind",
          "com.jsoniter.TestDemo.test_any_api",
          "com.jsoniter.TestDemo.test_any_is_fun",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_indention"
        ],
        "result": "ERROR",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestSkip.test_skip_string_streaming",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestFloat.test_streaming",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestFloat.test_combination_of_dot_and_exponent",
          "com.jsoniter.TestFloat.test_positive_negative",
          "com.jsoniter.TestFloat.test_long_double",
          "com.jsoniter.TestFloat.test_decimal_places",
          "com.jsoniter.TestFloat.test_ieee_754",
          "com.jsoniter.TestFloat.testChooseDouble",
          "com.jsoniter.TestFloat.testInfinity"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestNull.test_null_as_Double",
          "com.jsoniter.TestNull.test_null_as_Byte",
          "com.jsoniter.TestNull.test_null_as_Character",
          "com.jsoniter.TestNull.test_null_as_Any",
          "com.jsoniter.TestNull.test_null_as_BigDecimal",
          "com.jsoniter.TestNull.test_null_as_BigInteger",
          "com.jsoniter.TestNull.test_null_as_Long",
          "com.jsoniter.TestNull.test_null_as_Boolean",
          "com.jsoniter.TestNull.test_null_as_Short",
          "com.jsoniter.TestNull.test_null_as_Integer",
          "com.jsoniter.TestNull.test_null_as_Float",
          "com.jsoniter.TestDemo.test_abc",
          "com.jsoniter.TestDemo.test_iterator_api",
          "com.jsoniter.TestDemo.test_bind_api",
          "com.jsoniter.TestDemo.test_generics",
          "com.jsoniter.TestDemo.test_iterator",
          "com.jsoniter.TestDemo.test_deserialize",
          "com.jsoniter.TestDemo.test_utf8",
          "com.jsoniter.TestDemo.test_empty_array_as_null",
          "com.jsoniter.TestDemo.test_iterator_api_and_bind",
          "com.jsoniter.TestDemo.test_any_api",
          "com.jsoniter.TestDemo.test_any_is_fun",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.TestReadAny.test_read_int_as_string",
          "com.jsoniter.TestReadAny.test_size",
          "com.jsoniter.TestReadAny.test_read_double",
          "com.jsoniter.TestReadAny.test_read_int",
          "com.jsoniter.TestReadAny.test_read_any",
          "com.jsoniter.TestReadAny.test_read_string",
          "com.jsoniter.TestReadAny.test_read_int_object",
          "com.jsoniter.TestReadAny.test_get",
          "com.jsoniter.TestReadAny.test_read_float_as_int",
          "com.jsoniter.TestReadAny.test_bind_to_any",
          "com.jsoniter.TestReadAny.test_read_any_from_string",
          "com.jsoniter.TestReadAny.test_read_long",
          "com.jsoniter.TestReadAny.test_read_multiple_field",
          "com.jsoniter.TestReadAny.test_read_boolean",
          "com.jsoniter.TestReadAny.test_require_path",
          "com.jsoniter.TestReadAny.test_read_class",
          "com.jsoniter.TestReadAny.test_keys",
          "com.jsoniter.TestReadAny.test_read_int_array",
          "com.jsoniter.TestReadAny.test_read_float",
          "com.jsoniter.TestReadAny.test_read_any_in_streaming"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestString.test_utf8",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_larger_than_buffer"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_null_string"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestMap.test_MapKeyCodec",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key"
        ],
        "result": "PASS",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.any.TestArray.test_get",
          "com.jsoniter.any.TestArray.test_fill_partial_then_iterate",
          "com.jsoniter.any.TestArray.test_to_int",
          "com.jsoniter.any.TestArray.test_iterator",
          "com.jsoniter.any.TestArray.test_get_from_nested",
          "com.jsoniter.any.TestArray.test_to_string",
          "com.jsoniter.any.TestArray.test_size",
          "com.jsoniter.any.TestArray.test_to_boolean",
          "com.jsoniter.any.TestArray.test_equals_and_hashcode",
          "com.jsoniter.any.TestArray.test_null",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.any.TestLong.test_to_string_should_trim",
          "com.jsoniter.any.TestLong.test_should_fail_with_leading_zero",
          "com.jsoniter.any.TestLong.test_should_work_with_zero",
          "com.jsoniter.extra.TestBase64Float.test_Double",
          "com.jsoniter.extra.TestBase64Float.test_float",
          "com.jsoniter.extra.TestBase64Float.test_double",
          "com.jsoniter.extra.TestBase64Float.test_Float",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.TestString.test_utf8_string",
          "com.jsoniter.TestString.test_surrogate",
          "com.jsoniter.TestString.test_larger_than_buffer",
          "com.jsoniter.TestString.test_invalid_string",
          "com.jsoniter.TestString.test_incomplete_string",
          "com.jsoniter.TestString.test_long_string_in_streaming",
          "com.jsoniter.TestString.test_ascii_string_with_escape",
          "com.jsoniter.TestString.test_ascii_string",
          "com.jsoniter.TestString.test_normal_escape",
          "com.jsoniter.TestString.test_string_across_buffer",
          "com.jsoniter.TestString.test_null_string",
          "com.jsoniter.TestString.test_utf8",
          "com.jsoniter.TestString.test_incomplete_escape",
          "com.jsoniter.TestString.test_long_string",
          "com.jsoniter.TestString.test_unicode_escape",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestAnnotation.test_name_conflict",
          "com.jsoniter.TestAnnotation.test_inherited_setter_is_not_duplicate",
          "com.jsoniter.TestAnnotation.test_static_factory",
          "com.jsoniter.TestAnnotation.test_single_param_setter",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore_no_constructor_field",
          "com.jsoniter.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.TestAnnotationJsonIgnore.test_json_ignore_with_creator",
          "com.jsoniter.TestExisting.test_reuse_list",
          "com.jsoniter.TestExisting.test_reuse_linked_list",
          "com.jsoniter.TestExisting.test_reuse_map",
          "com.jsoniter.TestExisting.test_direct_reuse",
          "com.jsoniter.TestExisting.test_indirect_reuse",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.TestWhatIsNext.test",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestNull.test_null_as_Double",
          "com.jsoniter.TestNull.test_null_as_Byte",
          "com.jsoniter.TestNull.test_null_as_Character",
          "com.jsoniter.TestNull.test_null_as_Any",
          "com.jsoniter.TestNull.test_null_as_BigDecimal",
          "com.jsoniter.TestNull.test_null_as_BigInteger",
          "com.jsoniter.TestNull.test_null_as_Long",
          "com.jsoniter.TestNull.test_null_as_Boolean",
          "com.jsoniter.TestNull.test_null_as_Short",
          "com.jsoniter.TestNull.test_null_as_Integer",
          "com.jsoniter.TestNull.test_null_as_Float",
          "com.jsoniter.TestDemo.test_abc",
          "com.jsoniter.TestDemo.test_iterator_api",
          "com.jsoniter.TestDemo.test_bind_api",
          "com.jsoniter.TestDemo.test_generics",
          "com.jsoniter.TestDemo.test_iterator",
          "com.jsoniter.TestDemo.test_deserialize",
          "com.jsoniter.TestDemo.test_utf8",
          "com.jsoniter.TestDemo.test_empty_array_as_null",
          "com.jsoniter.TestDemo.test_iterator_api_and_bind",
          "com.jsoniter.TestDemo.test_any_api",
          "com.jsoniter.TestDemo.test_any_is_fun",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.extra.TestBase64.test_decode",
          "com.jsoniter.extra.TestBase64.test_encode",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestObject.test_inheritance",
          "com.jsoniter.TestObject.test_one_field",
          "com.jsoniter.TestObject.test_iterator",
          "com.jsoniter.TestObject.test_empty_class",
          "com.jsoniter.TestObject.test_read_null",
          "com.jsoniter.TestObject.test_maybe_empty_array_field",
          "com.jsoniter.TestObject.test_non_ascii_field",
          "com.jsoniter.TestObject.test_private_ref",
          "com.jsoniter.TestObject.test_object_creation",
          "com.jsoniter.TestObject.test_enum",
          "com.jsoniter.TestObject.test_two_fields",
          "com.jsoniter.TestObject.test_incomplete_field_name",
          "com.jsoniter.TestObject.test_setter_is_preferred",
          "com.jsoniter.TestObject.test_native_field",
          "com.jsoniter.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder_for_type_literal",
          "com.jsoniter.TestSpiPropertyDecoder.test_PropertyDecoder",
          "com.jsoniter.TestReadAny.test_read_int_as_string",
          "com.jsoniter.TestReadAny.test_size",
          "com.jsoniter.TestReadAny.test_read_double",
          "com.jsoniter.TestReadAny.test_read_int",
          "com.jsoniter.TestReadAny.test_read_any",
          "com.jsoniter.TestReadAny.test_read_string",
          "com.jsoniter.TestReadAny.test_read_int_object",
          "com.jsoniter.TestReadAny.test_get",
          "com.jsoniter.TestReadAny.test_read_float_as_int",
          "com.jsoniter.TestReadAny.test_bind_to_any",
          "com.jsoniter.TestReadAny.test_read_any_from_string",
          "com.jsoniter.TestReadAny.test_read_long",
          "com.jsoniter.TestReadAny.test_read_multiple_field",
          "com.jsoniter.TestReadAny.test_read_boolean",
          "com.jsoniter.TestReadAny.test_require_path",
          "com.jsoniter.TestReadAny.test_read_class",
          "com.jsoniter.TestReadAny.test_keys",
          "com.jsoniter.TestReadAny.test_read_int_array",
          "com.jsoniter.TestReadAny.test_read_float",
          "com.jsoniter.TestReadAny.test_read_any_in_streaming",
          "com.jsoniter.TestFloat.test_streaming",
          "com.jsoniter.TestFloat.test_positive_negative",
          "com.jsoniter.TestFloat.test_combination_of_dot_and_exponent",
          "com.jsoniter.TestFloat.testBigDecimal",
          "com.jsoniter.TestFloat.test_long_double",
          "com.jsoniter.TestFloat.test_decimal_places",
          "com.jsoniter.TestFloat.test_ieee_754",
          "com.jsoniter.TestFloat.testInfinity",
          "com.jsoniter.TestFloat.testChooseDouble",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse2",
          "com.jsoniter.TestSlice.test_equals",
          "com.jsoniter.TestSlice.test_hashcode",
          "com.jsoniter.TestSlice.test_equalsInputNotNullOutputFalse",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.TestMap.test_object_key"
        ],
        "result": "ERROR",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.TestInteger.test_streaming",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.IterImplForStreamingTest.testLoadMore",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor_and_setter_binding",
          "com.jsoniter.TestAnnotationJsonCreator.test_ctor",
          "com.jsoniter.TestSpiTypeDecoder.test_list_or_single_element",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder_for_generics",
          "com.jsoniter.TestSpiTypeDecoder.test_as_array_element",
          "com.jsoniter.TestSpiTypeDecoder.test_as_field_type",
          "com.jsoniter.TestSpiTypeDecoder.test_direct",
          "com.jsoniter.TestSpiTypeDecoder.test_TypeDecoder",
          "com.jsoniter.TestAnnotationJsonWrapper.test_binding",
          "com.jsoniter.TestAnnotationJsonWrapper.test_key_value",
          "com.jsoniter.TestAnnotationJsonWrapper.test_issue_104",
          "com.jsoniter.TestNested.test_get_all_array_elements_via_any",
          "com.jsoniter.TestNested.test_get_all_with_some_invalid_path",
          "com.jsoniter.TestNested.test_recursive_class",
          "com.jsoniter.TestNested.test_array_of_objects",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestMap.test_enum_key",
          "com.jsoniter.TestMap.test_string_key",
          "com.jsoniter.TestMap.test_MapKeyCodec",
          "com.jsoniter.TestMap.test_object_key",
          "com.jsoniter.TestMap.test_integer_key",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse3",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse4",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputTrueOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputNotNullOutputFalse",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse5",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputZeroOutputTrue2",
          "com.jsoniter.TestOmitValue.test_shouldOmitInputPositiveOutputFalse6",
          "com.jsoniter.TestGenerics.test_generic_super_class",
          "com.jsoniter.TestGenerics.test_complex_object",
          "com.jsoniter.TestGenerics.test_linked_list",
          "com.jsoniter.TestGenerics.test_list_of_list",
          "com.jsoniter.TestGenerics.test_wildcard",
          "com.jsoniter.TestGenerics.test_integer_map",
          "com.jsoniter.TestGenerics.test_string_map",
          "com.jsoniter.TestGenerics.test_string_set",
          "com.jsoniter.TestGenerics.test_string_list",
          "com.jsoniter.TestGenerics.test_int_list",
          "com.jsoniter.TestGenerics.test_issue_103",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestArray.test_collection_without_type",
          "com.jsoniter.output.TestArray.test_default_empty_collection",
          "com.jsoniter.output.TestArray.test_indention_with_empty_array",
          "com.jsoniter.output.TestArray.test_collection",
          "com.jsoniter.output.TestArray.test_gen_array",
          "com.jsoniter.output.TestArray.test_null_collection",
          "com.jsoniter.output.TestArray.test_list_of_objects",
          "com.jsoniter.output.TestArray.test_array_of_null",
          "com.jsoniter.output.TestArray.test_list_of_null",
          "com.jsoniter.output.TestArray.test_hash_set",
          "com.jsoniter.output.TestArray.test_arrays_as_list",
          "com.jsoniter.output.TestArray.test_indention",
          "com.jsoniter.output.TestArray.test_null_array",
          "com.jsoniter.output.TestArray.test_empty_collection",
          "com.jsoniter.output.TestArray.test_empty_array",
          "com.jsoniter.output.TestNested.test_collection_of_objects",
          "com.jsoniter.output.TestNested.test_map_of_objects",
          "com.jsoniter.output.TestNested.test_object_of_array",
          "com.jsoniter.output.TestNested.test_recursive_class",
          "com.jsoniter.output.TestNested.test_array_of_objects",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestMap.test",
          "com.jsoniter.output.TestMap.test_indention_with_empty_map",
          "com.jsoniter.output.TestMap.test_enum_key",
          "com.jsoniter.output.TestMap.test_int_as_map_key",
          "com.jsoniter.output.TestMap.test_multiple_keys",
          "com.jsoniter.output.TestMap.test_empty",
          "com.jsoniter.output.TestMap.test_MapKeyCodec",
          "com.jsoniter.output.TestMap.test_object_key",
          "com.jsoniter.output.TestMap.test_integer_key",
          "com.jsoniter.output.TestMap.test_null",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestCollection.test_indention_with_empty_array",
          "com.jsoniter.output.TestCollection.test_indention",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.output.TestGson.test_excludeFieldsWithoutExposeAnnotation",
          "com.jsoniter.output.TestGson.test_addSerializationExclusionStrategy",
          "com.jsoniter.output.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.output.TestGson.test_SerializedName_on_field",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_off",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_style",
          "com.jsoniter.output.TestGson.test_setDateFormat_with_format",
          "com.jsoniter.output.TestGson.test_getter_should_be_ignored",
          "com.jsoniter.output.TestGson.test_disableHtmlEscaping_on",
          "com.jsoniter.output.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.output.TestGson.test_setVersion",
          "com.jsoniter.output.TestGson.test_surrogate",
          "com.jsoniter.output.TestGson.test_setPrettyPrinting",
          "com.jsoniter.output.TestGson.test_serializeNulls",
          "com.jsoniter.output.TestGson.test_Expose",
          "com.jsoniter.output.TestInteger.testBigInteger",
          "com.jsoniter.output.TestStreamBuffer.test_write_bytes",
          "com.jsoniter.output.TestStreamBuffer.test_write_indention",
          "com.jsoniter.output.TestStreamBuffer.test_write_raw",
          "com.jsoniter.output.TestStreamBuffer.test_write_string",
          "com.jsoniter.output.TestStreamBuffer.test_write_int",
          "com.jsoniter.output.TestStreamBuffer.test_write_long",
          "com.jsoniter.output.TestObject.test_collection_value_not_nullable",
          "com.jsoniter.output.TestObject.test_transient_field_getter",
          "com.jsoniter.output.TestObject.test_indention_with_empty_object",
          "com.jsoniter.output.TestObject.test_array_field_is_null_via_getter",
          "com.jsoniter.output.TestObject.test_indention",
          "com.jsoniter.output.TestObject.test_empty_object",
          "com.jsoniter.output.TestObject.test_field",
          "com.jsoniter.output.TestObject.test_null_field",
          "com.jsoniter.output.TestObject.test_enum",
          "com.jsoniter.output.TestObject.test_array_field",
          "com.jsoniter.output.TestObject.test_array_field_is_null",
          "com.jsoniter.output.TestObject.test_not_nullable",
          "com.jsoniter.output.TestObject.test_not_omit_null",
          "com.jsoniter.output.TestObject.test_omit_null",
          "com.jsoniter.output.TestObject.test_name_conflict",
          "com.jsoniter.output.TestObject.test_private_class",
          "com.jsoniter.output.TestObject.test_missing_notFirst",
          "com.jsoniter.output.TestObject.test_omit_default",
          "com.jsoniter.output.TestObject.test_omit_selft_defined",
          "com.jsoniter.output.TestObject.test_null",
          "com.jsoniter.output.TestString.test_serialize_into_output_stream",
          "com.jsoniter.output.TestString.test_escape_control_character",
          "com.jsoniter.output.TestString.test_escape_unicode",
          "com.jsoniter.output.TestString.test_unicode_tilde",
          "com.jsoniter.output.TestString.test_unicode",
          "com.jsoniter.output.TestFloat.test_infinity",
          "com.jsoniter.output.TestFloat.testBigDecimal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestAny.test_int",
          "com.jsoniter.output.TestAny.test_long",
          "com.jsoniter.output.TestAny.test_double",
          "com.jsoniter.output.TestAny.test_boolean",
          "com.jsoniter.output.TestAny.test_string",
          "com.jsoniter.output.TestAny.test_object",
          "com.jsoniter.output.TestAny.test_float",
          "com.jsoniter.output.TestAny.test_list",
          "com.jsoniter.output.TestAny.test_array",
          "com.jsoniter.output.TestAny.test_not_found",
          "com.jsoniter.output.TestAny.test_null",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore_decoding_only",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_ignore",
          "com.jsoniter.output.TestAnnotationJsonIgnore.test_private_serialize",
          "com.jsoniter.output.TestList.test_indention_with_empty_array",
          "com.jsoniter.output.TestList.test_indention",
          "com.jsoniter.TestGson.test_setFieldNamingPolicy",
          "com.jsoniter.TestGson.test_setDateFormat_format",
          "com.jsoniter.TestGson.test_addDeserializationExclusionStrategy",
          "com.jsoniter.TestGson.test_setFieldNamingStrategy",
          "com.jsoniter.TestGson.test_null_as_boolean",
          "com.jsoniter.TestGson.test_null_as_long",
          "com.jsoniter.TestGson.test_null_as_int",
          "com.jsoniter.TestGson.test_null_as_float",
          "com.jsoniter.TestGson.test_null_as_double",
          "com.jsoniter.TestGson.test_bool_as_string",
          "com.jsoniter.TestGson.test_int_as_string",
          "com.jsoniter.TestGson.test_SerializedName",
          "com.jsoniter.TestGson.test_setVersion",
          "com.jsoniter.TestGson.test_Expose",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties_blacklist",
          "com.jsoniter.TestAnnotationJsonObject.test_no_unknown_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_extra_properties",
          "com.jsoniter.TestAnnotationJsonObject.test_unknown_properties",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_max_min_int"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    },
    {
      "name": "com.jsoniter.IterImplForStreamingTest.testLoadMore",
      "intended": {
        "order": [
          "com.jsoniter.TestJackson.test_JsonAnySetter",
          "com.jsoniter.TestJackson.test_JsonProperty",
          "com.jsoniter.TestJackson.test_JsonIgnore",
          "com.jsoniter.TestBoolean.test_streaming",
          "com.jsoniter.TestBoolean.test_non_streaming",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_iterator"
        ],
        "result": "ERROR",
        "testRunId": "1700529324017-b31bfd55-3934-4d4e-80b0-886a8c3f80c8"
      },
      "revealed": {
        "order": [
          "com.jsoniter.TestIO.test_read_bytes",
          "com.jsoniter.TestIO.test_read_byte",
          "com.jsoniter.TestIO.test_unread_byte",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder",
          "com.jsoniter.output.TestSpiPropertyEncoder.test_PropertyEncoder_for_type_literal",
          "com.jsoniter.TestSkip.test_skip_object",
          "com.jsoniter.TestSkip.test_skip_string",
          "com.jsoniter.TestSkip.test_skip_array",
          "com.jsoniter.TestSkip.test_skip_string_streaming",
          "com.jsoniter.TestSkip.test_skip_nested",
          "com.jsoniter.TestSkip.test_skip_number",
          "com.jsoniter.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_specify_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_field_and_getter_setter",
          "com.jsoniter.TestAnnotationJsonProperty.test_integer_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_property_decoder",
          "com.jsoniter.TestAnnotationJsonProperty.test_bind_from_multiple_names",
          "com.jsoniter.TestAnnotationJsonProperty.test_required",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties",
          "com.jsoniter.TestAnnotationJsonProperty.test_rename",
          "com.jsoniter.TestAnnotationJsonProperty.test_creator_with_json_property",
          "com.jsoniter.TestAnnotationJsonProperty.test_required_properties_not_missing",
          "com.jsoniter.extra.TestPreciseFloat.test_indirect_encode",
          "com.jsoniter.extra.TestPreciseFloat.test_direct_encode",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper_with_map",
          "com.jsoniter.output.TestAnnotationJsonUnwrapper.test_unwrapper",
          "com.jsoniter.extra.TestNamingStrategy.test",
          "com.jsoniter.any.TestMap.test_to_boolean",
          "com.jsoniter.any.TestMap.test_to_string",
          "com.jsoniter.any.TestMap.test_get",
          "com.jsoniter.any.TestMap.test_size",
          "com.jsoniter.any.TestMap.test_to_int",
          "com.jsoniter.any.TestMap.test_get_from_nested",
          "com.jsoniter.any.TestMap.test_iterator",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder_for_type_literal",
          "com.jsoniter.output.TestSpiTypeEncoder.test_TypeEncoder",
          "com.jsoniter.output.TestJackson.test_JsonProperty",
          "com.jsoniter.output.TestJackson.test_JsonIgnore",
          "com.jsoniter.output.TestJackson.test_JsonAnyGetter",
          "com.jsoniter.TestInteger.test_large_number",
          "com.jsoniter.TestInteger.test_streaming",
          "com.jsoniter.TestInteger.testBigInteger",
          "com.jsoniter.TestInteger.test_positive_negative_long",
          "com.jsoniter.TestInteger.test_leading_zero",
          "com.jsoniter.TestInteger.test_max_int",
          "com.jsoniter.TestInteger.test_max_min_int",
          "com.jsoniter.TestInteger.testChooseLong",
          "com.jsoniter.TestInteger.test_max_min_long",
          "com.jsoniter.TestInteger.test_positive_negative_int",
          "com.jsoniter.TestInteger.test_char",
          "com.jsoniter.TestInteger.test_byte",
          "com.jsoniter.TestInteger.testChooseInteger",
          "com.jsoniter.output.TestNative.test_utf8",
          "com.jsoniter.output.TestNative.test_negative_int",
          "com.jsoniter.output.TestNative.test_int",
          "com.jsoniter.output.TestNative.test_small_int",
          "com.jsoniter.output.TestNative.test_boxed_int",
          "com.jsoniter.output.TestNative.test_escape",
          "com.jsoniter.output.TestNative.test_short",
          "com.jsoniter.output.TestNative.test_raw",
          "com.jsoniter.output.TestNative.test_negative_long",
          "com.jsoniter.output.TestNative.test_float2",
          "com.jsoniter.output.TestNative.test_boolean",
          "com.jsoniter.output.TestNative.test_big_float",
          "com.jsoniter.output.TestNative.test_big_integer",
          "com.jsoniter.output.TestNative.test_long",
          "com.jsoniter.output.TestNative.test_no_decimal_float",
          "com.jsoniter.output.TestNative.test_large_int",
          "com.jsoniter.output.TestNative.test_large_double",
          "com.jsoniter.output.TestNative.test_float3",
          "com.jsoniter.output.TestNative.test_double",
          "com.jsoniter.output.TestNative.test_slash",
          "com.jsoniter.output.TestNative.test_string",
          "com.jsoniter.output.TestNative.test_big_decimal",
          "com.jsoniter.output.TestGenerics.test_inherited_getter_is_not_duplicate",
          "com.jsoniter.output.TestGenerics.test_wildcard",
          "com.jsoniter.TestCustomizeType.test_customize_through_extension",
          "com.jsoniter.TestCustomizeType.test_customize_impl",
          "com.jsoniter.any.TestList.test_iterator",
          "com.jsoniter.any.TestList.test_get",
          "com.jsoniter.any.TestList.test_size",
          "com.jsoniter.any.TestList.test_to_boolean",
          "com.jsoniter.any.TestList.test_to_string",
          "com.jsoniter.any.TestList.test_to_int",
          "com.jsoniter.any.TestList.test_get_from_nested",
          "com.jsoniter.any.TestList.test_for_each",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_property",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_getter_and_setter",
          "com.jsoniter.output.TestAnnotationJsonProperty.test_encoder",
          "com.jsoniter.TestArray.test_array_lazy_any_to_string",
          "com.jsoniter.TestArray.test_empty_array",
          "com.jsoniter.TestArray.test_one_element",
          "com.jsoniter.TestArray.test_two_elements",
          "com.jsoniter.TestArray.test_iterator",
          "com.jsoniter.TestArray.test_three_elements",
          "com.jsoniter.TestArray.test_five_elements",
          "com.jsoniter.TestArray.test_null",
          "com.jsoniter.TestArray.test_boolean_array",
          "com.jsoniter.TestArray.test_four_elements",
          "com.jsoniter.IterImplForStreamingTest.testReadMaxDouble"
        ],
        "result": "PASS",
        "testRunId": "1700529328883-0557d969-60ca-4022-9738-487ea2c3574f"
      },
      "type": "OD"
    }
  ]
}